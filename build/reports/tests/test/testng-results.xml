<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="20" total="34" passed="6" failed="8" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-30T11:47:14 GMT+07:00" name="Gradle suite" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="4102">
    <groups>
    </groups>
    <test started-at="2025-01-30T11:47:14 GMT+07:00" name="Gradle test" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="4102">
      <class name="autotests.tests.actions.DuckQuackTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextBeforeTestClass" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextPrepareTestInstance" finished-at="2025-01-30T11:47:14 GMT+07:00" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="before()[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:14 GMT+07:00" name="before" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckQuackTest.successfulQuackWithEvenId(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulQuackWithEvenId(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:15 GMT+07:00" name="successfulQuackWithEvenId" description="РџСЂРѕРІРµСЂРєР° РєСЂСЏРєР°РЅСЊСЏ СѓС‚РѕС‡РєРё СЃ РєРѕСЂСЂРµРєС‚РЅС‹Рј С‡РµС‚РЅС‹Рј Id" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="2027" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.consol.citrus.exceptions.TestCaseFailedException">
            <message>
              <![CDATA[Failed to validate JSON text:
{"sound":"moo-moo-moo, moo-moo-moo"} Values not equal for entry: 'sound', expected 'quack-quack-quack, quack-quack-quack' but was 'moo-moo-moo, moo-moo-moo']]>
            </message>
            <full-stacktrace>
              <![CDATA[com.consol.citrus.exceptions.TestCaseFailedException: Failed to validate JSON text:
{"sound":"moo-moo-moo, moo-moo-moo"} Values not equal for entry: 'sound', expected 'quack-quack-quack, quack-quack-quack' but was 'moo-moo-moo, moo-moo-moo'
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)
at com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)
at com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)
at autotests.clients.DuckActionsClient.validateResponseResource(DuckActionsClient.java:39)
at autotests.tests.actions.DuckQuackTest.successfulQuackWithEvenId(DuckQuackTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
at com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)
at com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)
at com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)
at com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.consol.citrus.exceptions.ValidationException: Failed to validate JSON text:
{"sound":"moo-moo-moo, moo-moo-moo"} Values not equal for entry: 'sound', expected 'quack-quack-quack, quack-quack-quack' but was 'moo-moo-moo, moo-moo-moo'
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:114)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:58)
at com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)
at com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)
at com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)
at com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)
... 28 more
Caused by: java.lang.IllegalArgumentException: Values not equal for entry: 'sound', expected 'quack-quack-quack, quack-quack-quack' but was 'moo-moo-moo, moo-moo-moo'
at org.springframework.util.Assert.isTrue(Assert.java:121)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateJson(JsonTextMessageValidator.java:211)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:102)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- com.consol.citrus.exceptions.TestCaseFailedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulQuackWithEvenId -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckQuackTest.successfulQuackWithEvenId(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckQuackTest.successfulQuackWithOddId(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulQuackWithOddId(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:17 GMT+07:00" name="successfulQuackWithOddId" description="РџСЂРѕРІРµСЂРєР° РєСЂСЏРєР°РЅСЊСЏ СѓС‚РѕС‡РєРё СЃ РєРѕСЂСЂРµРєС‚РЅС‹Рј РЅРµС‡РµС‚РЅС‹Рј Id" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulQuackWithOddId -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckQuackTest.successfulQuackWithOddId(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="after()[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:17 GMT+07:00" name="after" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:autotests.tests.actions.DuckQuackTest@6088451e]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextAfterTestClass" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- autotests.tests.actions.DuckQuackTest -->
      <class name="autotests.clients.DuckActionsClient">
        <test-method is-config="true" signature="beforeSuite(org.testng.ITestContext)[pri:0, instance:autotests.clients.DuckActionsClient@163042ea]" started-at="2025-01-30T11:47:11 GMT+07:00" name="beforeSuite" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="3159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@42edde25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="afterSuite(org.testng.ITestContext)[pri:0, instance:autotests.clients.DuckActionsClient@163042ea]" started-at="2025-01-30T11:47:19 GMT+07:00" name="afterSuite" finished-at="2025-01-30T11:47:19 GMT+07:00" duration-ms="189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@42edde25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- autotests.clients.DuckActionsClient -->
      <class name="autotests.tests.actions.DuckPropertiesTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextBeforeTestClass" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextPrepareTestInstance" finished-at="2025-01-30T11:47:14 GMT+07:00" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="before()[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:14 GMT+07:00" name="before" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckPropertiesTest.successfulGetPropertiesWithMaterialRubber(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulGetPropertiesWithMaterialRubber(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:15 GMT+07:00" name="successfulGetPropertiesWithMaterialRubber" description="РџРѕР»СѓС‡РµРЅРёРµ РїР°СЂР°РјРµС‚СЂРѕРІ СѓС‚РѕС‡РєРё РёР· РјР°С‚РµСЂРёР°Р»Р° rubber Рё СЃ РЅРµС‡РµС‚РЅС‹Рј Id" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="2022" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.consol.citrus.exceptions.TestCaseFailedException">
            <message>
              <![CDATA[Failed to validate JSON text:
{"color":"yellow","height":15.0,"material":"rubber","sound":"quack","wingsState":"ACTIVE"} Values not equal for entry: 'height', expected '0.15' but was '15.0']]>
            </message>
            <full-stacktrace>
              <![CDATA[com.consol.citrus.exceptions.TestCaseFailedException: Failed to validate JSON text:
{"color":"yellow","height":15.0,"material":"rubber","sound":"quack","wingsState":"ACTIVE"} Values not equal for entry: 'height', expected '0.15' but was '15.0'
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)
at com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)
at com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)
at autotests.clients.DuckActionsClient.validateResponseString(DuckActionsClient.java:30)
at autotests.tests.actions.DuckPropertiesTest.successfulGetPropertiesWithMaterialRubber(DuckPropertiesTest.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
at com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)
at com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)
at com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)
at com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.consol.citrus.exceptions.ValidationException: Failed to validate JSON text:
{"color":"yellow","height":15.0,"material":"rubber","sound":"quack","wingsState":"ACTIVE"} Values not equal for entry: 'height', expected '0.15' but was '15.0'
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:114)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:58)
at com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)
at com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)
at com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)
at com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)
... 28 more
Caused by: java.lang.IllegalArgumentException: Values not equal for entry: 'height', expected '0.15' but was '15.0'
at org.springframework.util.Assert.isTrue(Assert.java:121)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateJson(JsonTextMessageValidator.java:211)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:102)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- com.consol.citrus.exceptions.TestCaseFailedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulGetPropertiesWithMaterialRubber -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckPropertiesTest.successfulGetPropertiesWithMaterialRubber(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckPropertiesTest.successfulGetPropertiesWithMaterialWood(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulGetPropertiesWithMaterialWood(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:17 GMT+07:00" name="successfulGetPropertiesWithMaterialWood" description="РџРѕР»СѓС‡РµРЅРёРµ РїР°СЂР°РјРµС‚СЂРѕРІ СѓС‚РѕС‡РєРё РёР· РјР°С‚РµСЂРёР°Р»Р° wood Рё СЃ С‡РµС‚РЅС‹Рј Id" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="717" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.consol.citrus.exceptions.TestCaseFailedException">
            <message>
              <![CDATA[Failed to validate JSON text:
{} Number of JSON entries not equal for element: '$.', expected '5' but was '0']]>
            </message>
            <full-stacktrace>
              <![CDATA[com.consol.citrus.exceptions.TestCaseFailedException: Failed to validate JSON text:
{} Number of JSON entries not equal for element: '$.', expected '5' but was '0'
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)
at com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)
at com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)
at autotests.clients.DuckActionsClient.validateResponseString(DuckActionsClient.java:30)
at autotests.tests.actions.DuckPropertiesTest.successfulGetPropertiesWithMaterialWood(DuckPropertiesTest.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
at com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)
at com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)
at com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)
at com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.consol.citrus.exceptions.ValidationException: Failed to validate JSON text:
{} Number of JSON entries not equal for element: '$.', expected '5' but was '0'
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:114)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:58)
at com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)
at com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)
at com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)
at com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)
... 28 more
Caused by: java.lang.IllegalArgumentException: Number of JSON entries not equal for element: '$.', expected '5' but was '0'
at org.springframework.util.Assert.isTrue(Assert.java:121)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateJson(JsonTextMessageValidator.java:145)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:102)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- com.consol.citrus.exceptions.TestCaseFailedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulGetPropertiesWithMaterialWood -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckPropertiesTest.successfulGetPropertiesWithMaterialWood(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="after()[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:18 GMT+07:00" name="after" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:autotests.tests.actions.DuckPropertiesTest@40de8f93]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestClass" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- autotests.tests.actions.DuckPropertiesTest -->
      <class name="autotests.tests.objectManipulation.DuckCreateTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextBeforeTestClass" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextPrepareTestInstance" finished-at="2025-01-30T11:47:17 GMT+07:00" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="before()[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:17 GMT+07:00" name="before" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="28" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.objectManipulation.DuckCreateTest.successfulCreateDuckWithMaterialRubber(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulCreateDuckWithMaterialRubber(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:17 GMT+07:00" name="successfulCreateDuckWithMaterialRubber" description="РЎРѕР·РґР°РЅРёРµ СѓС‚РѕС‡РєРё РёР· СЂРµР·РёРЅС‹" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="1009" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulCreateDuckWithMaterialRubber -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.objectManipulation.DuckCreateTest.successfulCreateDuckWithMaterialRubber(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.objectManipulation.DuckCreateTest.successfulCreateDuckWithMaterialWood(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulCreateDuckWithMaterialWood(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:18 GMT+07:00" name="successfulCreateDuckWithMaterialWood" description="РЎРѕР·РґР°РЅРёРµ СѓС‚РѕС‡РєРё РёР· РґРµСЂРµРІР°" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulCreateDuckWithMaterialWood -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.objectManipulation.DuckCreateTest.successfulCreateDuckWithMaterialWood(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="after()[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:18 GMT+07:00" name="after" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:autotests.tests.objectManipulation.DuckCreateTest@6a1ef65c]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestClass" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- autotests.tests.objectManipulation.DuckCreateTest -->
      <class name="autotests.tests.actions.DuckSwimTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextBeforeTestClass" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextPrepareTestInstance" finished-at="2025-01-30T11:47:14 GMT+07:00" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="before()[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:14 GMT+07:00" name="before" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckSwimTest.successfulSwimWithExistingId(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulSwimWithExistingId(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:15 GMT+07:00" name="successfulSwimWithExistingId" description="РџСЂРѕРІРµСЂРєР° РјРѕР¶РµС‚ Р»Рё СѓС‚РѕС‡РєР° СЃ СЃСѓС‰РµСЃС‚РІСѓСЋС‰РёРј Id РїР»Р°РІР°С‚СЊ" finished-at="2025-01-30T11:47:16 GMT+07:00" duration-ms="1554" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.consol.citrus.exceptions.TestCaseFailedException">
            <message>
              <![CDATA[Validation failed: Values not equal for header element 'citrus_http_reason_phrase', expected 'OK' but was 'NOT_FOUND']]>
            </message>
            <full-stacktrace>
              <![CDATA[com.consol.citrus.exceptions.TestCaseFailedException: Validation failed: Values not equal for header element 'citrus_http_reason_phrase', expected 'OK' but was 'NOT_FOUND'
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)
at com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)
at com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)
at autotests.clients.DuckActionsClient.validateResponseString(DuckActionsClient.java:30)
at autotests.tests.actions.DuckSwimTest.successfulSwimWithExistingId(DuckSwimTest.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
at com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)
at com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)
at com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)
at com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.consol.citrus.exceptions.ValidationException: Validation failed: Values not equal for header element 'citrus_http_reason_phrase', expected 'OK' but was 'NOT_FOUND'
at com.consol.citrus.validation.DefaultHeaderValidator.validateHeader(DefaultHeaderValidator.java:79)
at com.consol.citrus.validation.DefaultMessageHeaderValidator.validateMessage(DefaultMessageHeaderValidator.java:101)
at com.consol.citrus.validation.DefaultMessageHeaderValidator.validateMessage(DefaultMessageHeaderValidator.java:44)
at com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)
at com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)
at com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)
at com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)
... 28 more
Caused by: java.lang.IllegalArgumentException: Values not equal for header element 'citrus_http_reason_phrase', expected 'OK' but was 'NOT_FOUND'
at org.springframework.util.Assert.isTrue(Assert.java:121)
at com.consol.citrus.validation.DefaultHeaderValidator.validateHeader(DefaultHeaderValidator.java:66)
... 35 more
]]>
            </full-stacktrace>
          </exception> <!-- com.consol.citrus.exceptions.TestCaseFailedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulSwimWithExistingId -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:16 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:16 GMT+07:00" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckSwimTest.successfulSwimWithExistingId(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:16 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:16 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckSwimTest.unsuccessfulSwimWithNotExistingId(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="unsuccessfulSwimWithNotExistingId(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:16 GMT+07:00" name="unsuccessfulSwimWithNotExistingId" description="РџСЂРѕРІРµСЂРєР° РјРѕР¶РµС‚ Р»Рё СѓС‚РѕС‡РєР° СЃ РЅРµ СЃСѓС‰РµСЃС‚РІСѓСЋС‰РёРј Id РїР»Р°РІР°С‚СЊ" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="351" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.consol.citrus.exceptions.TestCaseFailedException">
            <message>
              <![CDATA[Failed to validate JSON text:
{"message":"Paws are not found (((("} Values not equal for entry: 'message', expected 'Duck with id = 0 is not found' but was 'Paws are not found ((((']]>
            </message>
            <full-stacktrace>
              <![CDATA[com.consol.citrus.exceptions.TestCaseFailedException: Failed to validate JSON text:
{"message":"Paws are not found (((("} Values not equal for entry: 'message', expected 'Duck with id = 0 is not found' but was 'Paws are not found (((('
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)
at com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)
at com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)
at autotests.clients.DuckActionsClient.validateResponseWithNotExistingId(DuckActionsClient.java:57)
at autotests.tests.actions.DuckSwimTest.unsuccessfulSwimWithNotExistingId(DuckSwimTest.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
at com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)
at com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)
at com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)
at com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.consol.citrus.exceptions.ValidationException: Failed to validate JSON text:
{"message":"Paws are not found (((("} Values not equal for entry: 'message', expected 'Duck with id = 0 is not found' but was 'Paws are not found (((('
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:114)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:58)
at com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)
at com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)
at com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)
at com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)
... 28 more
Caused by: java.lang.IllegalArgumentException: Values not equal for entry: 'message', expected 'Duck with id = 0 is not found' but was 'Paws are not found (((('
at org.springframework.util.Assert.isTrue(Assert.java:121)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateJson(JsonTextMessageValidator.java:211)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:102)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- com.consol.citrus.exceptions.TestCaseFailedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unsuccessfulSwimWithNotExistingId -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckSwimTest.unsuccessfulSwimWithNotExistingId(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="after()[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:17 GMT+07:00" name="after" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:autotests.tests.actions.DuckSwimTest@1163a27]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextAfterTestClass" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- autotests.tests.actions.DuckSwimTest -->
      <class name="autotests.tests.objectManipulation.DuckDeleteTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:autotests.tests.objectManipulation.DuckDeleteTest@27abb6ca]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextBeforeTestClass" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:autotests.tests.objectManipulation.DuckDeleteTest@27abb6ca]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextPrepareTestInstance" finished-at="2025-01-30T11:47:17 GMT+07:00" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="before()[pri:0, instance:autotests.tests.objectManipulation.DuckDeleteTest@27abb6ca]" started-at="2025-01-30T11:47:17 GMT+07:00" name="before" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.objectManipulation.DuckDeleteTest@27abb6ca]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.objectManipulation.DuckDeleteTest.successfulDeleteDuck(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulDeleteDuck(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.objectManipulation.DuckDeleteTest@27abb6ca]" started-at="2025-01-30T11:47:17 GMT+07:00" name="successfulDeleteDuck" description="РЈРґР°Р»РµРЅРёРµ СѓС‚РѕС‡РєРё" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="674" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulDeleteDuck -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.objectManipulation.DuckDeleteTest@27abb6ca]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.objectManipulation.DuckDeleteTest.successfulDeleteDuck(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="after()[pri:0, instance:autotests.tests.objectManipulation.DuckDeleteTest@27abb6ca]" started-at="2025-01-30T11:47:18 GMT+07:00" name="after" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:autotests.tests.objectManipulation.DuckDeleteTest@27abb6ca]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestClass" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- autotests.tests.objectManipulation.DuckDeleteTest -->
      <class name="autotests.tests.actions.DuckFlyTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextBeforeTestClass" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextPrepareTestInstance" finished-at="2025-01-30T11:47:14 GMT+07:00" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="before()[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:14 GMT+07:00" name="before" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:14 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:14 GMT+07:00" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckFlyTest.successfulFlyWithActiveWings(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulFlyWithActiveWings(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:15 GMT+07:00" name="successfulFlyWithActiveWings" description="РџСЂРѕРІРµСЂРєР° РїРѕР»РµС‚Р° СѓС‚РѕС‡РєРё РІ СЃРѕСЃС‚РѕСЏРЅРёРё РєСЂС‹Р»СЊРµРІ ACTIVE" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="2012" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.consol.citrus.exceptions.TestCaseFailedException">
            <message>
              <![CDATA[Failed to validate JSON text:
{"message":"I am flying :)"} Values not equal for entry: 'message', expected 'I`m flying' but was 'I am flying :)']]>
            </message>
            <full-stacktrace>
              <![CDATA[com.consol.citrus.exceptions.TestCaseFailedException: Failed to validate JSON text:
{"message":"I am flying :)"} Values not equal for entry: 'message', expected 'I`m flying' but was 'I am flying :)'
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)
at com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)
at com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)
at autotests.clients.DuckActionsClient.validateResponseString(DuckActionsClient.java:30)
at autotests.tests.actions.DuckFlyTest.successfulFlyWithActiveWings(DuckFlyTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
at com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)
at com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)
at com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)
at com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.consol.citrus.exceptions.ValidationException: Failed to validate JSON text:
{"message":"I am flying :)"} Values not equal for entry: 'message', expected 'I`m flying' but was 'I am flying :)'
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:114)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:58)
at com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)
at com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)
at com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)
at com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)
... 28 more
Caused by: java.lang.IllegalArgumentException: Values not equal for entry: 'message', expected 'I`m flying' but was 'I am flying :)'
at org.springframework.util.Assert.isTrue(Assert.java:121)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateJson(JsonTextMessageValidator.java:211)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:102)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- com.consol.citrus.exceptions.TestCaseFailedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulFlyWithActiveWings -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckFlyTest.successfulFlyWithActiveWings(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:17 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:17 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckFlyTest.successfulFlyWithFixedWings(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulFlyWithFixedWings(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:17 GMT+07:00" name="successfulFlyWithFixedWings" description="РџСЂРѕРІРµСЂРєР° РїРѕР»РµС‚Р° СѓС‚РѕС‡РєРё РІ СЃРѕСЃС‚РѕСЏРЅРёРё РєСЂС‹Р»СЊРµРІ FIXED" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="782" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.consol.citrus.exceptions.TestCaseFailedException">
            <message>
              <![CDATA[Failed to validate JSON text:
{"message":"I can not fly :C"} Values not equal for entry: 'message', expected 'I can`t fly' but was 'I can not fly :C']]>
            </message>
            <full-stacktrace>
              <![CDATA[com.consol.citrus.exceptions.TestCaseFailedException: Failed to validate JSON text:
{"message":"I can not fly :C"} Values not equal for entry: 'message', expected 'I can`t fly' but was 'I can not fly :C'
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)
at com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)
at com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)
at autotests.clients.DuckActionsClient.validateResponseResource(DuckActionsClient.java:39)
at autotests.tests.actions.DuckFlyTest.successfulFlyWithFixedWings(DuckFlyTest.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
at com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)
at com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)
at com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)
at com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.consol.citrus.exceptions.ValidationException: Failed to validate JSON text:
{"message":"I can not fly :C"} Values not equal for entry: 'message', expected 'I can`t fly' but was 'I can not fly :C'
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:114)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:58)
at com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)
at com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)
at com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)
at com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)
... 28 more
Caused by: java.lang.IllegalArgumentException: Values not equal for entry: 'message', expected 'I can`t fly' but was 'I can not fly :C'
at org.springframework.util.Assert.isTrue(Assert.java:121)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateJson(JsonTextMessageValidator.java:211)
at com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:102)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- com.consol.citrus.exceptions.TestCaseFailedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulFlyWithFixedWings -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckFlyTest.successfulFlyWithFixedWings(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckFlyTest.successfulFlyWithUndefinedWings(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulFlyWithUndefinedWings(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:18 GMT+07:00" name="successfulFlyWithUndefinedWings" description="РџСЂРѕРІРµСЂРєР° РїРѕР»РµС‚Р° СѓС‚РѕС‡РєРё РІ СЃРѕСЃС‚РѕСЏРЅРёРё РєСЂС‹Р»СЊРµРІ UNDEFINED" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="319" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.consol.citrus.exceptions.TestCaseFailedException">
            <message>
              <![CDATA[Validation failed: Values not equal for header element 'citrus_http_reason_phrase', expected 'BAD_REQUEST' but was 'OK']]>
            </message>
            <full-stacktrace>
              <![CDATA[com.consol.citrus.exceptions.TestCaseFailedException: Validation failed: Values not equal for header element 'citrus_http_reason_phrase', expected 'BAD_REQUEST' but was 'OK'
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)
at com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)
at com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)
at autotests.clients.DuckActionsClient.validateResponseWingsUndefined(DuckActionsClient.java:48)
at autotests.tests.actions.DuckFlyTest.successfulFlyWithUndefinedWings(DuckFlyTest.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
at com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)
at com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)
at com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)
at com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)
at com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: com.consol.citrus.exceptions.ValidationException: Validation failed: Values not equal for header element 'citrus_http_reason_phrase', expected 'BAD_REQUEST' but was 'OK'
at com.consol.citrus.validation.DefaultHeaderValidator.validateHeader(DefaultHeaderValidator.java:79)
at com.consol.citrus.validation.DefaultMessageHeaderValidator.validateMessage(DefaultMessageHeaderValidator.java:101)
at com.consol.citrus.validation.DefaultMessageHeaderValidator.validateMessage(DefaultMessageHeaderValidator.java:44)
at com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)
at com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)
at com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)
at com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)
at com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)
... 28 more
Caused by: java.lang.IllegalArgumentException: Values not equal for header element 'citrus_http_reason_phrase', expected 'BAD_REQUEST' but was 'OK'
at org.springframework.util.Assert.isTrue(Assert.java:121)
at com.consol.citrus.validation.DefaultHeaderValidator.validateHeader(DefaultHeaderValidator.java:66)
... 35 more
]]>
            </full-stacktrace>
          </exception> <!-- com.consol.citrus.exceptions.TestCaseFailedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulFlyWithUndefinedWings -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.actions.DuckFlyTest.successfulFlyWithUndefinedWings(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="after()[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:18 GMT+07:00" name="after" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:autotests.tests.actions.DuckFlyTest@4f654cee]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestClass" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- autotests.tests.actions.DuckFlyTest -->
      <class name="autotests.tests.objectManipulation.DuckUpdateTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextBeforeTestClass" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextPrepareTestInstance" finished-at="2025-01-30T11:47:18 GMT+07:00" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="before()[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="before" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.objectManipulation.DuckUpdateTest.successfulUpdateDuckWithColorAndHeight(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulUpdateDuckWithColorAndHeight(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="successfulUpdateDuckWithColorAndHeight" description="РћР±РЅРѕРІР»РµРЅРёРµ РґР°РЅРЅС‹С… С†РІРµС‚Р° Рё СЂР°Р·РјРµСЂР° СѓС‚РѕС‡РєРё" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulUpdateDuckWithColorAndHeight -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.objectManipulation.DuckUpdateTest.successfulUpdateDuckWithColorAndHeight(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextBeforeTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.objectManipulation.DuckUpdateTest.successfulUpdateDuckWithColorAndSound(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="successfulUpdateDuckWithColorAndSound(com.consol.citrus.TestCaseRunner)[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="successfulUpdateDuckWithColorAndSound" description="РћР±РЅРѕРІР»РµРЅРёРµ РґР°РЅРЅС‹С… С†РІРµС‚Р° Рё Р·РІСѓРєР° СѓС‚РѕС‡РєРё" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulUpdateDuckWithColorAndSound -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestMethod" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void autotests.tests.objectManipulation.DuckUpdateTest.successfulUpdateDuckWithColorAndSound(com.consol.citrus.TestCaseRunner)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="after()[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="after" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:autotests.tests.objectManipulation.DuckUpdateTest@12a470dd]" started-at="2025-01-30T11:47:18 GMT+07:00" name="springTestContextAfterTestClass" finished-at="2025-01-30T11:47:18 GMT+07:00" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- autotests.tests.objectManipulation.DuckUpdateTest -->
    </test> <!-- Gradle test -->
  </suite> <!-- Gradle suite -->
</testng-results>
